{"version":3,"sources":["../src/recordings.js"],"names":["$","fn","dataTable","DataTable","Recordings","bbbid","locale","columns","data","datatableInit","append","table","paginatorLocation","searchvalue","set","datatable","tlist","rsearch","RegExp","escapeRegex","filterdata","filter","asList","item","name","get","description","test","element","nodeelement","node","parent","action","recordingid","meetingid","confirmation","extras","payload","recordingElementPayload","attrname","recordingActionPerform","confirm","M","core","modal","centered","question","recordingConfirmationMessage","on","mod_bigbluebuttonbn","helpers","toggleSpinningWheelOn","broker","thisbbb","datasource","sendRequest","request","callback","success","bbinfo","recordings_html","profile_features","indexOf","datatableInitFormatDates","init","dataobj","promise","methodname","args","bigbluebuttonbnid","Number","parseInt","done","tabledata","recording","JSON","parse","click","e","preventDefault","stopPropagation","value","target","filterByText","catch","Notification","exception"],"mappings":"qPAgBA,OAEA,OACA,O,qfAEAA,UAAEC,EAAF,CAAKC,SAAL,CAAiBC,SAAjB,C,GAEMC,CAAAA,C,YASF,WAAYC,CAAZ,CAAmBC,CAAnB,CAA2BC,CAA3B,CAAoCC,CAApC,CAA0C,4BARhC,EAQgC,gBAPnC,EAOmC,kBANjC,IAMiC,2BALxB,IAKwB,iBAJlC,IAIkC,iBAHlC,CAGkC,EACtC,KAAKH,KAAL,CAAaA,CAAb,CACA,KAAKC,MAAL,CAAcA,CAAd,CACA,KAAKE,IAAL,CAAYA,CAAZ,CACA,KAAKD,OAAL,CAAeA,CAAf,CACA,KAAKE,aAAL,EACH,C,wDAEe,CAGZ,cAAE,mCAAF,EAAuCC,MAAvC,CAA8C,iBAA9C,EACA,KAAKC,KAAL,CAAa,cAAE,yCAAF,EAA6CT,SAA7C,CACT,CACIK,OAAO,CAAE,KAAKA,OADlB,CAEIC,IAAI,CAAE,KAAKA,IAFf,CAGII,iBAAiB,CAAE,CAAC,QAAD,CAAW,QAAX,CAHvB,CADS,CAOhB,C,kDAGYC,C,CAAa,CACtB,GAAI,KAAKF,KAAT,CAAgB,CACZ,KAAKA,KAAL,CAAWG,GAAX,CAAe,MAAf,CAAuB,KAAKC,SAAL,CAAeP,IAAtC,EACA,GAAIK,CAAJ,CAAiB,IACTG,CAAAA,CAAK,CAAG,KAAKL,KAAL,CAAWH,IADV,CAETS,CAAO,CAAG,GAAIC,CAAAA,MAAJ,CAAW,YAAc,KAAKC,WAAL,CAAiBN,CAAjB,CAAd,CAA8C,YAAzD,CAAuE,GAAvE,CAFD,CAGTO,CAAU,CAAGJ,CAAK,CAACK,MAAN,CAAa,CAACC,MAAM,GAAP,CAAb,CAA6B,SAAUC,CAAV,CAAgB,IACtDC,CAAAA,CAAI,CAAGD,CAAI,CAACE,GAAL,CAAS,WAAT,CAD+C,CAEtDC,CAAW,CAAGH,CAAI,CAACE,GAAL,CAAS,aAAT,CAFwC,CAG1D,MACKD,CAAAA,CAAI,EAAIP,CAAO,CAACU,IAAR,CAAaH,CAAb,CAAT,EAAiCE,CAAW,EAAIT,CAAO,CAACU,IAAR,CAAaD,CAAb,CAEvD,CANgB,CAHJ,CAUb,KAAKf,KAAL,CAAWG,GAAX,CAAe,MAAf,CAAuBM,CAAvB,CACH,CACJ,CACJ,C,wEAEuBQ,C,CAAS,IACzBC,CAAAA,CAAW,CAAG,cAAED,CAAF,CADW,CAEzBE,CAAI,CAAGD,CAAW,CAACE,MAAZ,CAAmB,KAAnB,CAFkB,CAG7B,MAAO,CACHC,MAAM,CAAEH,CAAW,CAACrB,IAAZ,CAAiB,QAAjB,CADL,CAEHyB,WAAW,CAAEH,CAAI,CAACtB,IAAL,CAAU,aAAV,CAFV,CAGH0B,SAAS,CAAEJ,CAAI,CAACtB,IAAL,CAAU,WAAV,CAHR,CAKV,C,wDAEeoB,C,CAASO,C,CAAcC,C,CAAQ,CAC3C,GAAIC,CAAAA,CAAO,CAAG,KAAKC,uBAAL,CAA6BV,CAA7B,CAAd,CACA,IAAK,GAAIW,CAAAA,CAAT,GAAqBH,CAAAA,CAArB,CAA6B,CACzBC,CAAO,CAACE,CAAD,CAAP,CAAoBH,CAAM,CAACG,CAAD,CAC7B,CAED,GAAI,CAACJ,CAAL,CAAmB,CACf,KAAKK,sBAAL,CAA4BH,CAA5B,EACA,MACH,CAED,GAAII,CAAAA,CAAO,CAAG,GAAIC,CAAAA,CAAC,CAACC,IAAF,CAAOF,OAAX,CAAmB,CAC7BG,KAAK,GADwB,CAE7BC,QAAQ,GAFqB,CAG7BC,QAAQ,CAAE,KAAKC,4BAAL,CAAkCV,CAAlC,CAHmB,CAAnB,CAAd,CAMAI,CAAO,CAACO,EAAR,CAAW,cAAX,CAA2B,UAAW,CAClC,KAAKR,sBAAL,CAA4BH,CAA5B,CACH,CAFD,CAEG,IAFH,CAGH,C,sEAEsB7B,C,CAAM,CACzBkC,CAAC,CAACO,mBAAF,CAAsBC,OAAtB,CAA8BC,qBAA9B,CAAoD3C,CAApD,EACAkC,CAAC,CAACO,mBAAF,CAAsBG,MAAtB,CAA6BZ,sBAA7B,CAAoDhC,CAApD,EAEA,GAAI6C,CAAAA,CAAO,CAAG,IAAd,CACA,KAAKC,UAAL,CAAgBC,WAAhB,CAA4B,CACxBC,OAAO,CAAE,OAAS,KAAKnD,KAAd,CAAsB,8BADP,CAExBoD,QAAQ,CAAE,CACNC,OAAO,CAAE,iBAAUlD,CAAV,CAAgB,CACrB,GAAImD,CAAAA,CAAM,CAAGnD,CAAI,CAACA,IAAlB,CACA,GAAI,KAAAmD,CAAM,CAACC,eAAP,GAC2C,CAAC,CAA3C,EAAAD,CAAM,CAACE,gBAAP,CAAwBC,OAAxB,CAAgC,KAAhC,GAAqG,CAAC,CAAtD,EAAAH,CAAM,CAACE,gBAAP,CAAwBC,OAAxB,CAAgC,gBAAhC,CADjD,CAAJ,CAC+G,CAC3GT,CAAO,CAAC/C,MAAR,CAAiBqD,CAAM,CAACrD,MAAxB,CACA+C,CAAO,CAACtC,SAAR,CAAkBR,OAAlB,CAA4BoD,CAAM,CAACnD,IAAP,CAAYD,OAAxC,CACA8C,CAAO,CAACtC,SAAR,CAAkBP,IAAlB,CAAyB6C,CAAO,CAACU,wBAAR,CAAiCJ,CAAM,CAACnD,IAAP,CAAYA,IAA7C,CAC5B,CACJ,CATK,CAFc,CAA5B,CAcH,C,gBAUQwD,CAAI,CAAG,SAACC,CAAD,CAAa,CAC7B,GAAMC,CAAAA,CAAO,CAAG,WACZ,CAAC,CACGC,UAAU,CAAE,wCADf,CAEGC,IAAI,CAAE,CACFC,iBAAiB,CAAEC,MAAM,CAACC,QAAP,CAAgBN,CAAO,CAACI,iBAAxB,CADjB,CAFT,CAAD,CADY,CAAhB,CAOAH,CAAO,CAAC,CAAD,CAAP,CACKM,IADL,CACU,SAACb,CAAD,CAAY,CACd,GAAMc,CAAAA,CAAS,CAAGd,CAAM,CAACc,SAAzB,CACA,GAAI,KAAAA,CAAS,CAACb,eAAV,GAC+C,CAAC,CAA/C,GAAAa,CAAS,CAACZ,gBAAV,CAA2BC,OAA3B,CAAmC,KAAnC,GAC+D,CAAC,CAA1D,GAAAW,CAAS,CAACZ,gBAAV,CAA2BC,OAA3B,CAAmC,gBAAnC,CAFP,CAAJ,CAE0E,CACtE,GAAMY,CAAAA,CAAS,CAAG,GAAItE,CAAAA,CAAJ,CACd6D,CAAO,CAACI,iBADM,CAEdJ,CAAO,CAAC3D,MAFM,CAGdmE,CAAS,CAAClE,OAHI,CAIdoE,IAAI,CAACC,KAAL,CAAWH,CAAS,CAACjE,IAArB,CAJc,CAAlB,CAKA,cAAE,2DAAF,EAA+DqE,KAA/D,CACI,SAACC,CAAD,CAAO,CACHA,CAAC,CAACC,cAAF,GACAD,CAAC,CAACE,eAAF,GAEA,GAAIC,CAAAA,CAAK,CAAG,IAAZ,CACA,GAA2B,cAAvB,GAAAH,CAAC,CAACI,MAAF,CAASzD,GAAT,CAAa,IAAb,CAAJ,CAA2C,CACvCwD,CAAK,CAAG,cAAE,aAAF,EAAiBxD,GAAjB,CAAqB,OAArB,CACX,CAFD,IAEO,CACH,cAAE,aAAF,EAAiBX,GAAjB,CAAqB,OAArB,CAA8B,EAA9B,CACH,CAED4D,CAAS,CAACS,YAAV,CAAuBF,CAAvB,CACH,CAbL,CAgBH,CACD,MAAOR,CAAAA,CACV,CA7BL,EA8BEW,KA9BF,CA8BQC,UAAaC,SA9BrB,CA+BH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport {call as ajaxCall} from 'core/ajax';\nimport Notification from 'core/notification';\n//import get_string from 'core/str';\nimport $ from 'jquery';\nimport DataTable from 'mod_bigbluebuttonbn/local/libraries/jquery.dataTable';\n\n$.fn.dataTable = DataTable; // Make sure datatable is setup correctly.\n\nclass Recordings {\n    columns = {};\n    data = {};\n    locale = 'en';\n    windowVideoPlay = null;\n    table = null;\n    bbbid = 0;\n\n\n    constructor(bbbid, locale, columns, data) {\n        this.bbbid = bbbid;\n        this.locale = locale;\n        this.data = data;\n        this.columns = columns;\n        this.datatableInit();\n    }\n\n    datatableInit() {\n        // TODO: Init translations with datatable.\n        // TODO: add paginator and sort module ?\n        $('#bigbluebuttonbn_recordings_table').append('<table></table>');\n        this.table = $('#bigbluebuttonbn_recordings_table table').dataTable(\n            {\n                columns: this.columns,\n                data: this.data,\n                paginatorLocation: ['header', 'footer']\n            }\n        );\n    }\n\n\n    filterByText(searchvalue) {\n        if (this.table) {\n            this.table.set('data', this.datatable.data);\n            if (searchvalue) {\n                var tlist = this.table.data;\n                var rsearch = new RegExp('<span>.*?' + this.escapeRegex(searchvalue) + '.*?</span>', 'i');\n                var filterdata = tlist.filter({asList: true}, function (item) {\n                    var name = item.get('recording');\n                    var description = item.get('description');\n                    return (\n                        (name && rsearch.test(name)) || (description && rsearch.test(description))\n                    );\n                });\n                this.table.set('data', filterdata);\n            }\n        }\n    }\n\n    recordingElementPayload(element) {\n        var nodeelement = $(element);\n        var node = nodeelement.parent('div');\n        return {\n            action: nodeelement.data('action'),\n            recordingid: node.data('recordingid'),\n            meetingid: node.data('meetingid')\n        };\n    }\n\n    recordingAction(element, confirmation, extras) {\n        var payload = this.recordingElementPayload(element);\n        for (var attrname in extras) {\n            payload[attrname] = extras[attrname];\n        }\n        // The action doesn't require confirmation.\n        if (!confirmation) {\n            this.recordingActionPerform(payload);\n            return;\n        }\n        // Create the confirmation dialogue.\n        var confirm = new M.core.confirm({\n            modal: true,\n            centered: true,\n            question: this.recordingConfirmationMessage(payload)\n        });\n        // If it is confirmed.\n        confirm.on('complete-yes', function() {\n            this.recordingActionPerform(payload);\n        }, this);\n    }\n\n    recordingActionPerform(data) {\n        M.mod_bigbluebuttonbn.helpers.toggleSpinningWheelOn(data);\n        M.mod_bigbluebuttonbn.broker.recordingActionPerform(data);\n\n        var thisbbb = this;\n        this.datasource.sendRequest({\n            request: \"&id=\" + this.bbbid + \"&action=recording_list_table\",\n            callback: {\n                success: function (data) {\n                    var bbinfo = data.data;\n                    if (bbinfo.recordings_html === false &&\n                        (bbinfo.profile_features.indexOf('all') != -1 || bbinfo.profile_features.indexOf('showrecordings') != -1)) {\n                        thisbbb.locale = bbinfo.locale;\n                        thisbbb.datatable.columns = bbinfo.data.columns;\n                        thisbbb.datatable.data = thisbbb.datatableInitFormatDates(bbinfo.data.data);\n                    }\n                }\n            }\n        });\n    }\n\n}\n\n/**\n * Initialise recordings code.\n *\n * @method init\n * @param {object} dataobj\n */\nexport const init = (dataobj) => {\n    const promise = ajaxCall(\n        [{\n            methodname: 'mod_bigbluebutton_recording_list_table',\n            args: {\n                bigbluebuttonbnid: Number.parseInt(dataobj.bigbluebuttonbnid),\n            }\n        }]);\n    promise[0]\n        .done((bbinfo) => {\n            const tabledata = bbinfo.tabledata;\n            if (tabledata.recordings_html === false &&\n                (tabledata.profile_features.indexOf('all') !== -1\n                    || tabledata.profile_features.indexOf('showrecordings') !== -1))  {\n                const recording = new Recordings(\n                    dataobj.bigbluebuttonbnid,\n                    dataobj.locale,\n                    tabledata.columns,\n                    JSON.parse(tabledata.data));\n                $('#bigbluebuttonbn_recordings_searchform input[type=submit]').click(\n                    (e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        let value = null;\n                        if (e.target.get('id') === 'searchsubmit') {\n                            value = $('#searchtext').get('value');\n                        } else {\n                            $('#searchtext').set('value', '');\n                        }\n\n                        recording.filterByText(value);\n                    }\n                );\n                //M.mod_bigbluebuttonbn.helpers.init();\n            }\n            return tabledata;\n        }\n    ).catch(Notification.exception);\n};\n"],"file":"recordings.min.js"}